{"ast":null,"code":"var _jsxFileName = \"/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/components/StudentQueue.js\";\nimport React, { Component } from \"react\";\n// import { anonArray } from '../references/anon_names/animals';\n// import { anonArray } from '../references/anon_names/love';\nimport { anonArray } from \"../references/anon_names/march_madness\";\n// import { anonArray } from '../references/anon_names/fruits';\n// import { anonArray } from '../references/anon_names/spooky';\n// import { anonArray } from \"../references/anon_names/christmas\";\nimport { taTapIn, postStats } from \"../services\";\nimport \"../style/StudentQueue.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require(\"../secret.config.json\");\nconst goat = config.liam;\nconst ta_list = require(\"../references/ta_list.csv\");\nconst anonOn = true;\nclass StudentQueue extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      queue: [],\n      entry: [],\n      nextID: 0,\n      lastDQ: undefined,\n      time: []\n    };\n    this.keyDown = event => {\n      if (event.keyCode === 13) {\n        // enter\n        // this.submitGTID();\n        let name = `Anon ${anonArray[this.state.nextID]}`;\n        // eslint-disable-next-line react/no-direct-mutation-state\n        this.state.nextID = (this.state.nextID + 1) % anonArray.length;\n        let gtid = 69;\n        this.state.queue.push({\n          name: name,\n          gtid: gtid,\n          time: new Date().getTime()\n        });\n        this.updateState();\n      } else if (event.keyCode === 8) {\n        // backspace\n        this.dequeue();\n\n        // Full-screen page\n        const elem = document.documentElement;\n        try {\n          if (!document.fullscreenElement && elem.requestFullscreen) {\n            elem.requestFullscreen();\n          }\n        } catch (e) {\n          console.warn(e);\n        }\n      } else if (event.keyCode === 16) {\n        // shift\n        this.undeqeue();\n      }\n    };\n    this.submitGTID = async () => {\n      let gtid = this.state.entry.join(\"\");\n      if (gtid.length === 9) {\n        //find name of TA, if TA\n        let n = await this.getNameFromGTID(gtid);\n        console.log(n);\n        if (n) {\n          await taTapIn(n);\n          this.setState({\n            queue: this.state.queue,\n            entry: []\n          });\n          return;\n        }\n        // keep only last 5 digits of GTIDs\n        gtid = gtid.slice(4, 10);\n      }\n      this.setState({\n        queue: this.state.queue,\n        entry: []\n      });\n      // check for behavior (enqueue or dequeue)\n      let i, student;\n      let inQ = false;\n      for (i = 0; i < this.state.queue.length && !inQ; i++) {\n        student = this.state.queue[i];\n        if (student.gtid === gtid) {\n          inQ = true;\n        }\n      }\n      if (inQ) {\n        this.state.queue.splice(i - 1, 1);\n        //record time student spent in queue (minutes from ms)\n        this.state.time.push((new Date().getTime() - student.time) / 60000);\n      } else {\n        let name;\n        if (anonOn) {\n          name = \"Anon \" + anonArray[this.state.nextID];\n          if (gtid === goat) {\n            name = \"da goat\";\n          }\n          let newID = this.state.nextID + 1;\n          this.setState({\n            queue: this.state.queue,\n            entry: this.state.entry,\n            nextID: newID === anonArray.length ? 0 : newID\n          });\n        } else {\n          await this.getNameFromGTID(gtid).then(response => name = response);\n          if (!name) {\n            name = prompt(\"Not enrolled in the course? Please enter your name to be added to the queue:\", \"Guest\");\n          }\n        }\n        this.state.queue.push({\n          name: name,\n          gtid: gtid,\n          time: new Date().getTime()\n        });\n      }\n      this.updateState();\n    };\n    this.getNameFromGTID = async gtid => {\n      let content = \"\";\n      await fetch(ta_list).then(response => response.text()).then(text => content = text);\n      let lines = content.split(/[\\r\\n]+/g);\n      let found = false;\n      let curr, currLine;\n      // LINEAR search leggoooo\n      for (curr = 0; curr < lines.length && !found; curr++) {\n        currLine = lines[curr].split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n        if (currLine[1] === gtid) {\n          found = true;\n        }\n      }\n      return found ? currLine[0].split(\",\")[1].split(\" \")[1].split('\"')[0] + \" \" + currLine[0].split(\",\")[0].split('\"')[1].charAt(0) : null;\n    };\n  }\n  dequeue() {\n    let tempDQ = this.state.queue.shift();\n    this.setState({\n      lastDQ: tempDQ\n    });\n    this.updateState();\n  }\n  undeqeue() {\n    if (this.state.lastDQ) {\n      this.state.queue.unshift(this.state.lastDQ);\n      this.setState({\n        lastDQ: undefined\n      });\n      this.updateState();\n    }\n  }\n\n  //This kinda creates problems during the middle of the day\n  verifyOnDuty() {\n    return true; //this.props.tas.length > 0;\n  }\n\n  updateState() {\n    this.setState({\n      queue: this.state.queue,\n      entry: this.state.entry,\n      nextID: this.state.nextID,\n      lastDQ: this.state.lastDQ\n    });\n  }\n  async updateStats() {\n    //students that came and left within the last n min or that are still in the queue\n    let students = this.state.time.length + this.state.queue.length;\n    let avgTime = 0;\n    for (let i = 0; i < this.state.time.length; i++) {\n      avgTime += this.state.time[i];\n    }\n    //avg time spent in queue for students dequeued in last n minutes\n    avgTime /= this.state.time.length === 0 ? 1 : this.state.time.length;\n    this.setState({\n      time: []\n    });\n    avgTime = avgTime.toFixed(2);\n    await postStats(students, avgTime);\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.keyDown);\n    setInterval(function () {\n      this.updateStats();\n    }.bind(this), 1000 * 60 * 15); //every 15 minutes\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"StudentQueue\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"studentq_title\",\n        children: \"Queue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"studentq_info\",\n        children: \"Press ENTER and remember your name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"studentq_names\",\n        children: [this.state.queue && this.state.queue.length <= 14 && this.state.queue.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"studentq_name\",\n          children: value.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)), this.state.queue && this.state.queue.length > 14 && this.state.queue.map((value, index) => {\n          // const timeInQueue = (new Date().getTime() - value.time) / 1000 / 60; // calculate time in minutes\n          // console.log(timeInQueue);\n          // let nameColor = '#0f893b' // default green\n          // if (timeInQueue >= 5 && timeInQueue < 10) {\n          //     nameColor = '#FF6600'; // after 5 minutes orange\n          //   } else if (timeInQueue >= 10) {\n          //     nameColor = '#f22613'; // after 10 minutes red\n          // }\n          // console.log(nameColor);\n\n          if (index <= 4 || index >= this.state.queue.length - 5) {\n            // show first & last 5\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"studentq_name\",\n              children: value.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this);\n          } else if (index === 5) {\n            // show # hidden\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"studentq_name\",\n              children: [\"... (\", this.state.queue.length - 10, \" hidden) ...\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this);\n          } else {\n            return null;\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default StudentQueue;","map":{"version":3,"names":["React","Component","anonArray","taTapIn","postStats","jsxDEV","_jsxDEV","config","require","goat","liam","ta_list","anonOn","StudentQueue","constructor","args","state","queue","entry","nextID","lastDQ","undefined","time","keyDown","event","keyCode","name","length","gtid","push","Date","getTime","updateState","dequeue","elem","document","documentElement","fullscreenElement","requestFullscreen","e","console","warn","undeqeue","submitGTID","join","n","getNameFromGTID","log","setState","slice","i","student","inQ","splice","newID","then","response","prompt","content","fetch","text","lines","split","found","curr","currLine","charAt","tempDQ","shift","unshift","verifyOnDuty","updateStats","students","avgTime","toFixed","componentDidMount","addEventListener","setInterval","bind","render","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","map","value","index"],"sources":["/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/components/StudentQueue.js"],"sourcesContent":["import React, { Component } from \"react\";\n// import { anonArray } from '../references/anon_names/animals';\n// import { anonArray } from '../references/anon_names/love';\nimport { anonArray } from \"../references/anon_names/march_madness\";\n// import { anonArray } from '../references/anon_names/fruits';\n// import { anonArray } from '../references/anon_names/spooky';\n// import { anonArray } from \"../references/anon_names/christmas\";\nimport { taTapIn, postStats } from \"../services\";\nimport \"../style/StudentQueue.css\";\n\nconst config = require(\"../secret.config.json\");\nconst goat = config.liam;\nconst ta_list = require(\"../references/ta_list.csv\");\nconst anonOn = true;\n\nclass StudentQueue extends Component {\n  state = {\n    queue: [],\n    entry: [],\n    nextID: 0,\n    lastDQ: undefined,\n    time: [],\n  };\n\n  keyDown = (event) => {\n    if (event.keyCode === 13) {\n      // enter\n      // this.submitGTID();\n      let name =  `Anon ${anonArray[this.state.nextID]}`;\n      // eslint-disable-next-line react/no-direct-mutation-state\n      this.state.nextID = (this.state.nextID + 1) % anonArray.length;\n      let gtid = 69;\n      this.state.queue.push({\n        name: name,\n        gtid: gtid,\n        time: new Date().getTime(),\n      });\n      this.updateState();\n\n    } else if (event.keyCode === 8) {\n      // backspace\n      this.dequeue();\n      \n      // Full-screen page\n      const elem = document.documentElement;\n      try {\n        if (!document.fullscreenElement && elem.requestFullscreen) {\n            elem.requestFullscreen();\n        }\n      } catch (e) {\n          console.warn(e);\n      }\n    } else if (event.keyCode === 16) {\n      // shift\n      this.undeqeue();\n    }\n  };\n\n  dequeue() {\n    let tempDQ = this.state.queue.shift();\n    this.setState({\n      lastDQ: tempDQ,\n    });\n    this.updateState();\n  }\n\n  undeqeue() {\n    if (this.state.lastDQ) {\n      this.state.queue.unshift(this.state.lastDQ);\n      this.setState({\n        lastDQ: undefined,\n      });\n      this.updateState();\n    }\n  }\n\n  //This kinda creates problems during the middle of the day\n  verifyOnDuty() {\n    return true; //this.props.tas.length > 0;\n  }\n\n  updateState() {\n    this.setState({\n      queue: this.state.queue,\n      entry: this.state.entry,\n      nextID: this.state.nextID,\n      lastDQ: this.state.lastDQ,\n    });\n  }\n\n  submitGTID = async () => {\n    let gtid = this.state.entry.join(\"\");\n    if (gtid.length === 9) {\n      //find name of TA, if TA\n      let n = await this.getNameFromGTID(gtid);\n      console.log(n);\n      if (n) {\n        await taTapIn(n);\n        this.setState({\n          queue: this.state.queue,\n          entry: [],\n        });\n        return;\n      }\n      // keep only last 5 digits of GTIDs\n      gtid = gtid.slice(4, 10);\n    }\n    this.setState({\n      queue: this.state.queue,\n      entry: [],\n    });\n    // check for behavior (enqueue or dequeue)\n    let i, student;\n    let inQ = false;\n    for (i = 0; i < this.state.queue.length && !inQ; i++) {\n      student = this.state.queue[i];\n      if (student.gtid === gtid) {\n        inQ = true;\n      }\n    }\n    if (inQ) {\n      this.state.queue.splice(i - 1, 1);\n      //record time student spent in queue (minutes from ms)\n      this.state.time.push((new Date().getTime() - student.time) / 60000);\n    } else {\n      let name;\n      if (anonOn) {\n        name = \"Anon \" + anonArray[this.state.nextID];\n        if (gtid === goat) {\n          name = \"da goat\";\n        }\n        let newID = this.state.nextID + 1;\n        this.setState({\n          queue: this.state.queue,\n          entry: this.state.entry,\n          nextID: newID === anonArray.length ? 0 : newID,\n        });\n      } else {\n        await this.getNameFromGTID(gtid).then((response) => (name = response));\n        if (!name) {\n          name = prompt(\n            \"Not enrolled in the course? Please enter your name to be added to the queue:\",\n            \"Guest\"\n          );\n        }\n      }\n      this.state.queue.push({\n        name: name,\n        gtid: gtid,\n        time: new Date().getTime(),\n      });\n    }\n    this.updateState();\n  };\n\n  getNameFromGTID = async (gtid) => {\n    let content = \"\";\n    await fetch(ta_list)\n      .then((response) => response.text())\n      .then((text) => (content = text));\n    let lines = content.split(/[\\r\\n]+/g);\n    let found = false;\n    let curr, currLine;\n    // LINEAR search leggoooo\n    for (curr = 0; curr < lines.length && !found; curr++) {\n      currLine = lines[curr].split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n      if (currLine[1] === gtid) {\n        found = true;\n      }\n    }\n    return found\n      ? currLine[0].split(\",\")[1].split(\" \")[1].split('\"')[0] +\n          \" \" +\n          currLine[0].split(\",\")[0].split('\"')[1].charAt(0)\n      : null;\n  };\n\n  async updateStats() {\n    //students that came and left within the last n min or that are still in the queue\n    let students = this.state.time.length + this.state.queue.length;\n    let avgTime = 0;\n    for (let i = 0; i < this.state.time.length; i++) {\n      avgTime += this.state.time[i];\n    }\n    //avg time spent in queue for students dequeued in last n minutes\n    avgTime /= this.state.time.length === 0 ? 1 : this.state.time.length;\n\n    this.setState({\n      time: [],\n    });\n    avgTime = avgTime.toFixed(2);\n\n    await postStats(students, avgTime);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.keyDown);\n    setInterval(\n      function () {\n        this.updateStats();\n      }.bind(this),\n      1000 * 60 * 15\n    ); //every 15 minutes\n  }\n\n  render() {\n    return (\n      <div className=\"StudentQueue\">\n        <div id=\"studentq_title\">Queue</div>\n        <div id=\"studentq_info\">Press ENTER and remember your name!</div>\n        <div id=\"studentq_names\">\n          {this.state.queue &&\n            this.state.queue.length <= 14 &&\n            this.state.queue.map((value, index) => (\n              <div id=\"studentq_name\" key={index}>\n                {value.name}\n              </div>\n            ))}\n          {this.state.queue &&\n            this.state.queue.length > 14 &&\n            this.state.queue.map((value, index) => {\n              // const timeInQueue = (new Date().getTime() - value.time) / 1000 / 60; // calculate time in minutes\n              // console.log(timeInQueue);\n              // let nameColor = '#0f893b' // default green\n              // if (timeInQueue >= 5 && timeInQueue < 10) {\n              //     nameColor = '#FF6600'; // after 5 minutes orange\n              //   } else if (timeInQueue >= 10) {\n              //     nameColor = '#f22613'; // after 10 minutes red\n              // }\n              // console.log(nameColor);\n\n              if (index <= 4 || index >= this.state.queue.length - 5) {\n                // show first & last 5\n                return (\n                  <div id=\"studentq_name\" key={index}>\n                    {value.name}\n                  </div>\n                );\n              } else if (index === 5) {\n                // show # hidden\n                return (\n                  <div id=\"studentq_name\" key={index}>\n                    ... ({this.state.queue.length - 10} hidden) ...\n                  </div>\n                );\n              } else {\n                return null;\n              }\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StudentQueue;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}