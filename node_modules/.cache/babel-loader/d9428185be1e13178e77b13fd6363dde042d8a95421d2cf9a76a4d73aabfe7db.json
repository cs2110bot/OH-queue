{"ast":null,"code":"import request from'superagent';var config=require('./secret.config.json');var CALENDAR_ID=config.cal_id;var API_KEY=config.api_key;var url=\"https://www.googleapis.com/calendar/v3/calendars/\".concat(CALENDAR_ID,\"/events?key=\").concat(API_KEY);var nextOpeningTime=\"[Calculating...]\";export var nextClosingTime=null;function parseStart(time){var t=time.substring(0,11);t+='00:00:00.00Z';return t;}function parseEnd(time){var t=time.substring(0,11);t+='23:59:00.00Z';return t;}function getOpeningTime(days){var now=new Date();var endDate=new Date();endDate.setDate(endDate.getDate()+days);var params={singleEvents:true,timeMin:parseStart(now.toISOString()),timeMax:parseEnd(endDate.toISOString())};request.get(url,params).end(function(err,resp){if(!err){var startTimes=JSON.parse(resp.text).items.map(function(event){return event.start.dateTime;});nextOpeningTime=parseTime(new Date(startTimes.sort()[0]));}});}function getClosingTime(){var date=new Date();var params={singleEvents:true,timeMin:parseStart(date.toISOString()),timeMax:parseEnd(date.toISOString())};request.get(url,params).end(function(err,resp){if(!err){var endTimes=JSON.parse(resp.text).items.map(function(event){return event.end.dateTime;});var lastDatetime=new Date(endTimes.sort()[endTimes.length-1]);// Display if 1 hour or less remaining in today's OH\nif(lastDatetime>date&&(lastDatetime-date)/(1000*60)<=60){nextClosingTime=parseTime(lastDatetime,true);}else{nextClosingTime=null;}}});}function parseTime(time,timeOnly){var ampm=time.getHours()<=12?'AM':'PM';var day=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'][time.getDay()];var hours=time.getHours()%12||12;// 12-hour format\nvar minutes=String(time.getMinutes()).padStart(2,'0');// Pad with a leading zero if needed\nreturn timeOnly?\"\".concat(hours,\":\").concat(minutes):\"\".concat(hours,\":\").concat(minutes,\" \").concat(ampm,\" on \").concat(day);}export function getOnDuty(callback){var now=new Date().toISOString();var params={singleEvents:true,timeMin:parseStart(now),timeMax:parseEnd(now)};request.get(url,params).end(function(err,resp){if(!err){var tasOnDuty=[];// eslint-disable-next-line array-callback-return\nJSON.parse(resp.text).items.map(function(event){var startTime=new Date(event.start.dateTime).toISOString();var endTime=new Date(event.end.dateTime).toISOString();if(now>=startTime&&now<endTime){tasOnDuty.push({name:event.summary.split(\"'\")[0],busy:false/**\n                         * Right now, the way we identify remote hours is by adding an identifier to\n                         * the calendar invite name. For example, 'Ivan (remote)'.\n                         *\n                         * This is a bit jank and there are probably better ways to go about doing this,\n                         * but time is of the essence and so I'll come back to this later :P\n                         */});}});var statusMessage='';getOpeningTime(4);getClosingTime();if(tasOnDuty.length===0){// eslint-disable-next-line no-unused-expressions\nstatusMessage=\"Office Hours is closed. Check the calendar linked on Canvas to see when we're open!\";}else if(!tasOnDuty.some(function(ta){return!ta.remote;})){statusMessage='';}callback(tasOnDuty,statusMessage);}});}","map":{"version":3,"names":["request","config","require","CALENDAR_ID","cal_id","API_KEY","api_key","url","concat","nextOpeningTime","nextClosingTime","parseStart","time","t","substring","parseEnd","getOpeningTime","days","now","Date","endDate","setDate","getDate","params","singleEvents","timeMin","toISOString","timeMax","get","end","err","resp","startTimes","JSON","parse","text","items","map","event","start","dateTime","parseTime","sort","getClosingTime","date","endTimes","lastDatetime","length","timeOnly","ampm","getHours","day","getDay","hours","minutes","String","getMinutes","padStart","getOnDuty","callback","tasOnDuty","startTime","endTime","push","name","summary","split","busy","statusMessage","some","ta","remote"],"sources":["/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/gcal.js"],"sourcesContent":["import request from 'superagent';\n\nconst config = require('./secret.config.json');\nconst CALENDAR_ID = config.cal_id;\nconst API_KEY = config.api_key;\nlet url = `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events?key=${API_KEY}`;\nlet nextOpeningTime = \"[Calculating...]\";\nexport let nextClosingTime = null;\n\nfunction parseStart(time) {\n    let t = time.substring(0, 11);\n    t += '00:00:00.00Z';\n    return t;\n}\n\nfunction parseEnd(time) {\n    let t = time.substring(0, 11);\n    t += '23:59:00.00Z';\n    return t;\n}\n\nfunction getOpeningTime(days) {\n    const now = new Date();\n    let endDate = new Date();\n    endDate.setDate(endDate.getDate() + days);\n    let params = {\n        singleEvents: true,\n        timeMin: parseStart(now.toISOString()),\n        timeMax: parseEnd(endDate.toISOString())\n    };\n    request.get(url, params).end((err, resp) => {\n        if (!err) {\n            const startTimes = JSON.parse(resp.text).items.map(event => event.start.dateTime);\n            nextOpeningTime = parseTime(new Date(startTimes.sort()[0]));\n        }\n    })\n}   \n\nfunction getClosingTime() {\n    const date = new Date();\n    let params = {\n        singleEvents: true,\n        timeMin: parseStart(date.toISOString()),\n        timeMax: parseEnd(date.toISOString())\n    };\n    request.get(url, params).end((err, resp) => {\n        if (!err) {\n            const endTimes = JSON.parse(resp.text).items.map(event => event.end.dateTime);\n            const lastDatetime = new Date(endTimes.sort()[endTimes.length - 1]);\n            // Display if 1 hour or less remaining in today's OH\n            if (lastDatetime > date && (lastDatetime - date) / (1000 * 60) <= 60) {\n                nextClosingTime = parseTime(lastDatetime, true);\n            } else {\n                nextClosingTime = null;\n            }\n        }\n    })\n}\n\nfunction parseTime(time, timeOnly) {\n    const ampm = time.getHours() <= 12 ? 'AM' : 'PM'\n    const day = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][time.getDay()]; \n    const hours = time.getHours() % 12 || 12; // 12-hour format\n    const minutes = String(time.getMinutes()).padStart(2, '0'); // Pad with a leading zero if needed\n    return timeOnly ? `${hours}:${minutes}` : `${hours}:${minutes} ${ampm} on ${day}`;\n}\n\nexport function getOnDuty(callback) {\n    const now = new Date().toISOString();\n    let params = {\n        singleEvents: true,\n        timeMin: parseStart(now),\n        timeMax: parseEnd(now),\n    };\n    request.get(url, params).end((err, resp) => {\n        if (!err) {\n            let tasOnDuty = [];\n            // eslint-disable-next-line array-callback-return\n            JSON.parse(resp.text).items.map((event) => {\n                const startTime = new Date(event.start.dateTime).toISOString();\n                const endTime = new Date(event.end.dateTime).toISOString();\n                if (now >= startTime && now < endTime) {\n                    tasOnDuty.push({\n                        name: event.summary.split(\"'\")[0],\n                        busy: false,\n                        /**\n                         * Right now, the way we identify remote hours is by adding an identifier to\n                         * the calendar invite name. For example, 'Ivan (remote)'.\n                         *\n                         * This is a bit jank and there are probably better ways to go about doing this,\n                         * but time is of the essence and so I'll come back to this later :P\n                         */\n                    });\n                }\n            });\n            let statusMessage = '';\n            getOpeningTime(4);\n            getClosingTime();\n            if (tasOnDuty.length === 0) {\n                // eslint-disable-next-line no-unused-expressions\n                statusMessage = `Office Hours is closed. Check the calendar linked on Canvas to see when we're open!`;\n            } else if (!tasOnDuty.some((ta) => !ta.remote)) {\n                statusMessage =\n                    '';\n            }\n            callback(tasOnDuty, statusMessage);\n        }\n    });\n}\n"],"mappings":"AAAA,MAAO,CAAAA,OAAO,KAAM,YAAY,CAEhC,GAAM,CAAAC,MAAM,CAAGC,OAAO,CAAC,sBAAsB,CAAC,CAC9C,GAAM,CAAAC,WAAW,CAAGF,MAAM,CAACG,MAAM,CACjC,GAAM,CAAAC,OAAO,CAAGJ,MAAM,CAACK,OAAO,CAC9B,GAAI,CAAAC,GAAG,qDAAAC,MAAA,CAAuDL,WAAW,iBAAAK,MAAA,CAAeH,OAAO,CAAE,CACjG,GAAI,CAAAI,eAAe,CAAG,kBAAkB,CACxC,MAAO,IAAI,CAAAC,eAAe,CAAG,IAAI,CAEjC,QAAS,CAAAC,UAAUA,CAACC,IAAI,CAAE,CACtB,GAAI,CAAAC,CAAC,CAAGD,IAAI,CAACE,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAC7BD,CAAC,EAAI,cAAc,CACnB,MAAO,CAAAA,CAAC,CACZ,CAEA,QAAS,CAAAE,QAAQA,CAACH,IAAI,CAAE,CACpB,GAAI,CAAAC,CAAC,CAAGD,IAAI,CAACE,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAC7BD,CAAC,EAAI,cAAc,CACnB,MAAO,CAAAA,CAAC,CACZ,CAEA,QAAS,CAAAG,cAAcA,CAACC,IAAI,CAAE,CAC1B,GAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,GAAI,CAAAC,OAAO,CAAG,GAAI,CAAAD,IAAI,CAAC,CAAC,CACxBC,OAAO,CAACC,OAAO,CAACD,OAAO,CAACE,OAAO,CAAC,CAAC,CAAGL,IAAI,CAAC,CACzC,GAAI,CAAAM,MAAM,CAAG,CACTC,YAAY,CAAE,IAAI,CAClBC,OAAO,CAAEd,UAAU,CAACO,GAAG,CAACQ,WAAW,CAAC,CAAC,CAAC,CACtCC,OAAO,CAAEZ,QAAQ,CAACK,OAAO,CAACM,WAAW,CAAC,CAAC,CAC3C,CAAC,CACD1B,OAAO,CAAC4B,GAAG,CAACrB,GAAG,CAAEgB,MAAM,CAAC,CAACM,GAAG,CAAC,SAACC,GAAG,CAAEC,IAAI,CAAK,CACxC,GAAI,CAACD,GAAG,CAAE,CACN,GAAM,CAAAE,UAAU,CAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAACI,IAAI,CAAC,CAACC,KAAK,CAACC,GAAG,CAAC,SAAAC,KAAK,QAAI,CAAAA,KAAK,CAACC,KAAK,CAACC,QAAQ,GAAC,CACjF/B,eAAe,CAAGgC,SAAS,CAAC,GAAI,CAAAtB,IAAI,CAACa,UAAU,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/D,CACJ,CAAC,CAAC,CACN,CAEA,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACtB,GAAM,CAAAC,IAAI,CAAG,GAAI,CAAAzB,IAAI,CAAC,CAAC,CACvB,GAAI,CAAAI,MAAM,CAAG,CACTC,YAAY,CAAE,IAAI,CAClBC,OAAO,CAAEd,UAAU,CAACiC,IAAI,CAAClB,WAAW,CAAC,CAAC,CAAC,CACvCC,OAAO,CAAEZ,QAAQ,CAAC6B,IAAI,CAAClB,WAAW,CAAC,CAAC,CACxC,CAAC,CACD1B,OAAO,CAAC4B,GAAG,CAACrB,GAAG,CAAEgB,MAAM,CAAC,CAACM,GAAG,CAAC,SAACC,GAAG,CAAEC,IAAI,CAAK,CACxC,GAAI,CAACD,GAAG,CAAE,CACN,GAAM,CAAAe,QAAQ,CAAGZ,IAAI,CAACC,KAAK,CAACH,IAAI,CAACI,IAAI,CAAC,CAACC,KAAK,CAACC,GAAG,CAAC,SAAAC,KAAK,QAAI,CAAAA,KAAK,CAACT,GAAG,CAACW,QAAQ,GAAC,CAC7E,GAAM,CAAAM,YAAY,CAAG,GAAI,CAAA3B,IAAI,CAAC0B,QAAQ,CAACH,IAAI,CAAC,CAAC,CAACG,QAAQ,CAACE,MAAM,CAAG,CAAC,CAAC,CAAC,CACnE;AACA,GAAID,YAAY,CAAGF,IAAI,EAAI,CAACE,YAAY,CAAGF,IAAI,GAAK,IAAI,CAAG,EAAE,CAAC,EAAI,EAAE,CAAE,CAClElC,eAAe,CAAG+B,SAAS,CAACK,YAAY,CAAE,IAAI,CAAC,CACnD,CAAC,IAAM,CACHpC,eAAe,CAAG,IAAI,CAC1B,CACJ,CACJ,CAAC,CAAC,CACN,CAEA,QAAS,CAAA+B,SAASA,CAAC7B,IAAI,CAAEoC,QAAQ,CAAE,CAC/B,GAAM,CAAAC,IAAI,CAAGrC,IAAI,CAACsC,QAAQ,CAAC,CAAC,EAAI,EAAE,CAAG,IAAI,CAAG,IAAI,CAChD,GAAM,CAAAC,GAAG,CAAG,CAAC,QAAQ,CAAE,QAAQ,CAAE,SAAS,CAAE,WAAW,CAAE,UAAU,CAAE,QAAQ,CAAE,UAAU,CAAC,CAACvC,IAAI,CAACwC,MAAM,CAAC,CAAC,CAAC,CACzG,GAAM,CAAAC,KAAK,CAAGzC,IAAI,CAACsC,QAAQ,CAAC,CAAC,CAAG,EAAE,EAAI,EAAE,CAAE;AAC1C,GAAM,CAAAI,OAAO,CAAGC,MAAM,CAAC3C,IAAI,CAAC4C,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAAE;AAC5D,MAAO,CAAAT,QAAQ,IAAAxC,MAAA,CAAM6C,KAAK,MAAA7C,MAAA,CAAI8C,OAAO,KAAA9C,MAAA,CAAQ6C,KAAK,MAAA7C,MAAA,CAAI8C,OAAO,MAAA9C,MAAA,CAAIyC,IAAI,SAAAzC,MAAA,CAAO2C,GAAG,CAAE,CACrF,CAEA,MAAO,SAAS,CAAAO,SAASA,CAACC,QAAQ,CAAE,CAChC,GAAM,CAAAzC,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACO,WAAW,CAAC,CAAC,CACpC,GAAI,CAAAH,MAAM,CAAG,CACTC,YAAY,CAAE,IAAI,CAClBC,OAAO,CAAEd,UAAU,CAACO,GAAG,CAAC,CACxBS,OAAO,CAAEZ,QAAQ,CAACG,GAAG,CACzB,CAAC,CACDlB,OAAO,CAAC4B,GAAG,CAACrB,GAAG,CAAEgB,MAAM,CAAC,CAACM,GAAG,CAAC,SAACC,GAAG,CAAEC,IAAI,CAAK,CACxC,GAAI,CAACD,GAAG,CAAE,CACN,GAAI,CAAA8B,SAAS,CAAG,EAAE,CAClB;AACA3B,IAAI,CAACC,KAAK,CAACH,IAAI,CAACI,IAAI,CAAC,CAACC,KAAK,CAACC,GAAG,CAAC,SAACC,KAAK,CAAK,CACvC,GAAM,CAAAuB,SAAS,CAAG,GAAI,CAAA1C,IAAI,CAACmB,KAAK,CAACC,KAAK,CAACC,QAAQ,CAAC,CAACd,WAAW,CAAC,CAAC,CAC9D,GAAM,CAAAoC,OAAO,CAAG,GAAI,CAAA3C,IAAI,CAACmB,KAAK,CAACT,GAAG,CAACW,QAAQ,CAAC,CAACd,WAAW,CAAC,CAAC,CAC1D,GAAIR,GAAG,EAAI2C,SAAS,EAAI3C,GAAG,CAAG4C,OAAO,CAAE,CACnCF,SAAS,CAACG,IAAI,CAAC,CACXC,IAAI,CAAE1B,KAAK,CAAC2B,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACjCC,IAAI,CAAE,KACN;AACxB;AACA;AACA;AACA;AACA;AACA,2BACoB,CAAC,CAAC,CACN,CACJ,CAAC,CAAC,CACF,GAAI,CAAAC,aAAa,CAAG,EAAE,CACtBpD,cAAc,CAAC,CAAC,CAAC,CACjB2B,cAAc,CAAC,CAAC,CAChB,GAAIiB,SAAS,CAACb,MAAM,GAAK,CAAC,CAAE,CACxB;AACAqB,aAAa,sFAAwF,CACzG,CAAC,IAAM,IAAI,CAACR,SAAS,CAACS,IAAI,CAAC,SAACC,EAAE,QAAK,CAACA,EAAE,CAACC,MAAM,GAAC,CAAE,CAC5CH,aAAa,CACT,EAAE,CACV,CACAT,QAAQ,CAACC,SAAS,CAAEQ,aAAa,CAAC,CACtC,CACJ,CAAC,CAAC,CACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}