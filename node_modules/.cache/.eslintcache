[{"/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/index.js":"1","/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/App.js":"2","/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/serviceWorker.js":"3","/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/components/OnDuty.js":"4","/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/components/TAMeeting.js":"5","/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/components/Header.js":"6","/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/gcal.js":"7","/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/components/AlertBox.js":"8","/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/components/PersonCard.js":"9","/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/components/StudentQueue.js":"10","/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/services.js":"11","/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/references/anon_names/march_madness.js":"12","/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/references/anon_names/animals.js":"13"},{"size":452,"mtime":1710440013738,"results":"14","hashOfConfig":"15"},{"size":1942,"mtime":1710440013737,"results":"16","hashOfConfig":"15"},{"size":5681,"mtime":1710440013771,"results":"17","hashOfConfig":"15"},{"size":2924,"mtime":1710440013738,"results":"18","hashOfConfig":"15"},{"size":466,"mtime":1710440013738,"results":"19","hashOfConfig":"15"},{"size":1867,"mtime":1710440013737,"results":"20","hashOfConfig":"15"},{"size":4112,"mtime":1710440013738,"results":"21","hashOfConfig":"15"},{"size":586,"mtime":1710440013737,"results":"22","hashOfConfig":"15"},{"size":508,"mtime":1710440013738,"results":"23","hashOfConfig":"15"},{"size":7364,"mtime":1710440857989,"results":"24","hashOfConfig":"15"},{"size":668,"mtime":1710440013771,"results":"25","hashOfConfig":"15"},{"size":586,"mtime":1710440013739,"results":"26","hashOfConfig":"15"},{"size":947,"mtime":1710440013738,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5cjayt",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/index.js",[],[],"/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/App.js",[],[],"/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/serviceWorker.js",[],[],"/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/components/OnDuty.js",[],[],"/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/components/TAMeeting.js",[],[],"/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/components/Header.js",[],[],"/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/gcal.js",["68"],["69"],"import request from 'superagent';\n\nconst config = require('./secret.config.json');\nconst CALENDAR_ID = config.cal_id;\nconst API_KEY = config.api_key;\nlet url = `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events?key=${API_KEY}`;\nlet nextOpeningTime = \"[Calculating...]\";\nexport let nextClosingTime = null;\n\nfunction parseStart(time) {\n    let t = time.substring(0, 11);\n    t += '00:00:00.00Z';\n    return t;\n}\n\nfunction parseEnd(time) {\n    let t = time.substring(0, 11);\n    t += '23:59:00.00Z';\n    return t;\n}\n\nfunction getOpeningTime(days) {\n    const now = new Date();\n    let endDate = new Date();\n    endDate.setDate(endDate.getDate() + days);\n    let params = {\n        singleEvents: true,\n        timeMin: parseStart(now.toISOString()),\n        timeMax: parseEnd(endDate.toISOString())\n    };\n    request.get(url, params).end((err, resp) => {\n        if (!err) {\n            const startTimes = JSON.parse(resp.text).items.map(event => event.start.dateTime);\n            nextOpeningTime = parseTime(new Date(startTimes.sort()[0]));\n        }\n    })\n}   \n\nfunction getClosingTime() {\n    const date = new Date();\n    let params = {\n        singleEvents: true,\n        timeMin: parseStart(date.toISOString()),\n        timeMax: parseEnd(date.toISOString())\n    };\n    request.get(url, params).end((err, resp) => {\n        if (!err) {\n            const endTimes = JSON.parse(resp.text).items.map(event => event.end.dateTime);\n            const lastDatetime = new Date(endTimes.sort()[endTimes.length - 1]);\n            // Display if 1 hour or less remaining in today's OH\n            if (lastDatetime > date && (lastDatetime - date) / (1000 * 60) <= 60) {\n                nextClosingTime = parseTime(lastDatetime, true);\n            } else {\n                nextClosingTime = null;\n            }\n        }\n    })\n}\n\nfunction parseTime(time, timeOnly) {\n    const ampm = time.getHours() <= 12 ? 'AM' : 'PM'\n    const day = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][time.getDay()]; \n    const hours = time.getHours() % 12 || 12; // 12-hour format\n    const minutes = String(time.getMinutes()).padStart(2, '0'); // Pad with a leading zero if needed\n    return timeOnly ? `${hours}:${minutes}` : `${hours}:${minutes} ${ampm} on ${day}`;\n}\n\nexport function getOnDuty(callback) {\n    const now = new Date().toISOString();\n    let params = {\n        singleEvents: true,\n        timeMin: parseStart(now),\n        timeMax: parseEnd(now),\n    };\n    request.get(url, params).end((err, resp) => {\n        if (!err) {\n            let tasOnDuty = [];\n            // eslint-disable-next-line array-callback-return\n            JSON.parse(resp.text).items.map((event) => {\n                const startTime = new Date(event.start.dateTime).toISOString();\n                const endTime = new Date(event.end.dateTime).toISOString();\n                if (now >= startTime && now < endTime) {\n                    tasOnDuty.push({\n                        name: event.summary.split(\"'\")[0],\n                        busy: false,\n                        /**\n                         * Right now, the way we identify remote hours is by adding an identifier to\n                         * the calendar invite name. For example, 'Ivan (remote)'.\n                         *\n                         * This is a bit jank and there are probably better ways to go about doing this,\n                         * but time is of the essence and so I'll come back to this later :P\n                         */\n                    });\n                }\n            });\n            let statusMessage = '';\n            getOpeningTime(4);\n            getClosingTime();\n            if (tasOnDuty.length === 0) {\n                // eslint-disable-next-line no-unused-expressions\n                statusMessage = `Office Hours is closed. Check the calendar linked on Canvas to see when we're open!`;\n            } else if (!tasOnDuty.some((ta) => !ta.remote)) {\n                statusMessage =\n                    '';\n            }\n            callback(tasOnDuty, statusMessage);\n        }\n    });\n}\n","/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/components/AlertBox.js",[],[],"/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/components/PersonCard.js",[],[],"/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/components/StudentQueue.js",[],["70"],"/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/services.js",[],[],"/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/references/anon_names/march_madness.js",[],[],"/Users/galovadia/Downloads/new-OH-Queue/OH-queue/src/references/anon_names/animals.js",[],[],{"ruleId":"71","severity":1,"message":"72","line":7,"column":5,"nodeType":"73","messageId":"74","endLine":7,"endColumn":20},{"ruleId":"75","severity":1,"message":"76","line":79,"column":53,"nodeType":"77","messageId":"78","endLine":79,"endColumn":55,"suppressions":"79"},{"ruleId":"80","severity":1,"message":"81","line":31,"column":7,"nodeType":"82","messageId":"83","endLine":31,"endColumn":17,"suppressions":"84"},"no-unused-vars","'nextOpeningTime' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["85"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation",["86"],{"kind":"87","justification":"88"},{"kind":"87","justification":"88"},"directive",""]